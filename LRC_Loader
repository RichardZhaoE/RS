import java.io.File;
import java.io.IOException;
import java.io.BufferedReader;
import java.io.FileWriter;
import java.net.URLConnection;
import java.io.InputStreamReader;
import java.io.BufferedWriter;
import java.net.URLClassLoader;
import java.net.URL;
import java.net.MalformedURLException;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import javax.swing.JFormattedTextField;
import javax.swing.JButton;
import javax.swing.DefaultComboBoxModel;
import javax.swing.WindowConstants;
import javax.swing.ImageIcon;
import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import org.rsbot.script.Script;
import org.rsbot.script.ScriptManifest;

import java.awt.image.RenderedImage;
import java.text.NumberFormat;
import javax.imageio.ImageIO;

import org.rsbot.util.GlobalConfiguration;

@ScriptManifest(authors = { "Richard" }, keywords = "Living Cavern Miner", name = "Cavern Miner", version = 1.61, description = "Living Cavern Miner")

public class LRCMinerLoader extends Script{
	
	Script s;

	URL jarURL;


	URLConnection url = null; 
        BufferedReader in = null; 
        BufferedWriter out = null; 


	public boolean onStart() {
		try{
			url = new URL("http://www.scripts.site90.net/Scripts/LRCMiner/versionINFO.php").openConnection(); 
			in = new BufferedReader(new InputStreamReader(url.getInputStream()));
			if(Double.parseDouble(in.readLine()) > getVersion()) {
				if(JOptionPane.showConfirmDialog(null, "An update has been found. \nDo you wish to update your script? \nYour current script version:" +getVersion()) == 0){
					JOptionPane.showMessageDialog(null, "Please locate your 'LRCMiner.java'"); 
					JFileChooser fc = new JFileChooser(); 
					if(fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){ 
						url = new URL("http://www.scripts.site90.net/Scripts/LRCMiner/LRCMiner.java").openConnection(); 
						in = new BufferedReader(new InputStreamReader(url.getInputStream())); 
						out = new BufferedWriter(new FileWriter(fc.getSelectedFile().getPath())); 
					String inp; 
					while((inp = in.readLine()) != null){ 
						out.write(inp); 
						out.newLine(); 
						out.flush(); 
					} 
						log("Script has been updated successfully. Please recompile."); 
					return false; 
					}else log("Update has been canceled"); 
				}else log("Update has been canceled"); 
			}
		if(in != null) 
			in.close(); 
		if(out != null) 
			out.close(); 
		}catch (IOException e){ 
			log("Error retrieving version number!"); 
		} 

			try{
			jarURL = new URL("http://scripts.site90.net/Scripts/LRCMiner/LRCMiner.jar");
					URLClassLoader cl1 = new URLClassLoader(new URL[] { jarURL });
					Class c1 = cl1.loadClass("LRCMiner");
					s = (Script) c1.asSubclass(Script.class).newInstance();
					this.delegateTo(s);
			} catch (MalformedURLException e) {
				e.printStackTrace();
			} catch (InstantiationException e) {
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				e.printStackTrace();
			} catch (ClassNotFoundException e) {
				e.printStackTrace();
			}catch (IOException e) {
				e.printStackTrace();
			}
	return s.onStart();
	}

	public String getAuthor() {
		return "Richard";
	}

	public String getName() {
		return "LRCMiner";
	}
	public String getScriptCategory() {
		return "Other";
	}

	public double getVersion() {
		return 1.61;
	}



	public void onFinish() {
		s.onFinish();
    	}

	@Override
	public int loop() {
		return s.loop();
	}
}
